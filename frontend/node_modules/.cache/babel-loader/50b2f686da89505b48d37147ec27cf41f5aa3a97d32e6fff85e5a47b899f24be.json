{"ast":null,"code":"var _jsxFileName = \"C:\\\\Faks\\\\Semester4\\\\RAIN\\\\projekt\\\\frontend\\\\src\\\\components\\\\PhoneMap.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport React, { useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PhoneMap(_ref) {\n  _s();\n  let {\n    phoneData,\n    startLocation,\n    middleLocation,\n    endLocation\n  } = _ref;\n  const mapRef = useRef(null);\n  const routingControlRef = useRef(null);\n  useEffect(() => {\n    if (!mapRef.current) return;\n    const map = L.map(mapRef.current).setView([0, 0], 2);\n    console.log(map);\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: 'Map data &copy; OpenStreetMap contributors'\n    }).addTo(map);\n\n    // const routingControl = L.Routing.control({\n    //   waypoints: [\n    //     L.latLng(startLocation.latitude, startLocation.longitude),\n    //     L.latLng(middleLocation.latitude, middleLocation.longitude),\n    //     L.latLng(endLocation.latitude, endLocation.longitude)\n    //   ],\n    //   routeWhileDragging: true,\n    //   lineOptions: {\n    //     styles: [\n    //       {\n    //         color: 'green',\n    //         opacity: 0.6,\n    //         weight: 4\n    //       }\n    //     ]\n    //   },\n    //   show: false, // Hide the itinerary container\n    //   createMarker: function() { return null; } // Remove the markers connected to the road\n    // }).addTo(map);\n\n    routingControlRef.current = routingControl;\n\n    // Remove the marker-related code\n    // phoneData.forEach(item => {\n    //   const marker = L.marker([item.latitude, item.longitude]).addTo(map);\n    //   marker.bindPopup(`User: ${item.capturedBy}, Capture date: ${item.captureDate}`);\n    // });\n\n    return () => {\n      if (routingControl && typeof routingControl.removeLayer === 'function') {\n        routingControl.removeLayer();\n      }\n      if (map && typeof map.remove === 'function') {\n        map.remove();\n      }\n    };\n  }, [phoneData, startLocation, middleLocation, endLocation]);\n  const clearLines = () => {\n    if (routingControlRef.current) {\n      routingControlRef.current.getPlan().setWaypoints([]);\n      routingControlRef.current.hide();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    id: \"map\",\n    style: {\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_s(PhoneMap, \"EGeSgTQkQdzJo1wnXWTmhl+bR2c=\");\n_c = PhoneMap;\nexport default PhoneMap;\nvar _c;\n$RefreshReg$(_c, \"PhoneMap\");","map":{"version":3,"names":["useState","useEffect","React","useRef","L","jsxDEV","_jsxDEV","PhoneMap","_ref","_s","phoneData","startLocation","middleLocation","endLocation","mapRef","routingControlRef","current","map","setView","console","log","tileLayer","attribution","addTo","routingControl","removeLayer","remove","clearLines","getPlan","setWaypoints","hide","ref","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Faks/Semester4/RAIN/projekt/frontend/src/components/PhoneMap.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport React, { useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine';\r\n\r\nfunction PhoneMap({ phoneData, startLocation, middleLocation, endLocation }) {\r\n  const mapRef = useRef(null);\r\n  const routingControlRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!mapRef.current) return;\r\n\r\n    const map = L.map(mapRef.current).setView([0, 0], 2);\r\n\r\n    console.log(map)\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: 'Map data &copy; OpenStreetMap contributors'\r\n    }).addTo(map);\r\n\r\n    // const routingControl = L.Routing.control({\r\n    //   waypoints: [\r\n    //     L.latLng(startLocation.latitude, startLocation.longitude),\r\n    //     L.latLng(middleLocation.latitude, middleLocation.longitude),\r\n    //     L.latLng(endLocation.latitude, endLocation.longitude)\r\n    //   ],\r\n    //   routeWhileDragging: true,\r\n    //   lineOptions: {\r\n    //     styles: [\r\n    //       {\r\n    //         color: 'green',\r\n    //         opacity: 0.6,\r\n    //         weight: 4\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   show: false, // Hide the itinerary container\r\n    //   createMarker: function() { return null; } // Remove the markers connected to the road\r\n    // }).addTo(map);\r\n\r\n    routingControlRef.current = routingControl;\r\n\r\n    // Remove the marker-related code\r\n    // phoneData.forEach(item => {\r\n    //   const marker = L.marker([item.latitude, item.longitude]).addTo(map);\r\n    //   marker.bindPopup(`User: ${item.capturedBy}, Capture date: ${item.captureDate}`);\r\n    // });\r\n\r\n    return () => {\r\n      if (routingControl && typeof routingControl.removeLayer === 'function') {\r\n        routingControl.removeLayer();\r\n      }\r\n      if (map && typeof map.remove === 'function') {\r\n        map.remove();\r\n      }\r\n    };\r\n  }, [phoneData, startLocation, middleLocation, endLocation]);\r\n\r\n  const clearLines = () => {\r\n    if (routingControlRef.current) {\r\n      routingControlRef.current.getPlan().setWaypoints([]);\r\n      routingControlRef.current.hide();\r\n    }\r\n  };\r\n\r\n  return <div ref={mapRef}  id=\"map\" style={{ height: '400px' }}></div>;\r\n}\r\n\r\nexport default PhoneMap;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAAC,IAAA,EAA4D;EAAAC,EAAA;EAAA,IAA3D;IAAEC,SAAS;IAAEC,aAAa;IAAEC,cAAc;IAAEC;EAAY,CAAC,GAAAL,IAAA;EACzE,MAAMM,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMY,iBAAiB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEtCF,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,MAAM,CAACE,OAAO,EAAE;IAErB,MAAMC,GAAG,GAAGb,CAAC,CAACa,GAAG,CAACH,MAAM,CAACE,OAAO,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAEpDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAEhBb,CAAC,CAACiB,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;;IAEb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAF,iBAAiB,CAACC,OAAO,GAAGQ,cAAc;;IAE1C;IACA;IACA;IACA;IACA;;IAEA,OAAO,MAAM;MACX,IAAIA,cAAc,IAAI,OAAOA,cAAc,CAACC,WAAW,KAAK,UAAU,EAAE;QACtED,cAAc,CAACC,WAAW,CAAC,CAAC;MAC9B;MACA,IAAIR,GAAG,IAAI,OAAOA,GAAG,CAACS,MAAM,KAAK,UAAU,EAAE;QAC3CT,GAAG,CAACS,MAAM,CAAC,CAAC;MACd;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,SAAS,EAAEC,aAAa,EAAEC,cAAc,EAAEC,WAAW,CAAC,CAAC;EAE3D,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIZ,iBAAiB,CAACC,OAAO,EAAE;MAC7BD,iBAAiB,CAACC,OAAO,CAACY,OAAO,CAAC,CAAC,CAACC,YAAY,CAAC,EAAE,CAAC;MACpDd,iBAAiB,CAACC,OAAO,CAACc,IAAI,CAAC,CAAC;IAClC;EACF,CAAC;EAED,oBAAOxB,OAAA;IAAKyB,GAAG,EAAEjB,MAAO;IAAEkB,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACvE;AAAC7B,EAAA,CA7DQF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}