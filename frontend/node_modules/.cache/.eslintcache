[{"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\index.js":"1","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\reportWebVitals.js":"2","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\App.js":"3","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\userContext.js":"4","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Login.js":"5","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Header.js":"6","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Register.js":"7","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Logout.js":"8","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Profile.js":"9","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneData.js":"10","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\AddPhoneData.js":"11","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneMap.js":"12"},{"size":535,"mtime":1683616631582,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1683616631621,"results":"15","hashOfConfig":"14"},{"size":3068,"mtime":1684749785264,"results":"16","hashOfConfig":"14"},{"size":140,"mtime":1683616631658,"results":"17","hashOfConfig":"14"},{"size":1607,"mtime":1683616631796,"results":"18","hashOfConfig":"14"},{"size":1211,"mtime":1683643161381,"results":"19","hashOfConfig":"14"},{"size":1580,"mtime":1683616632010,"results":"20","hashOfConfig":"14"},{"size":537,"mtime":1683616631837,"results":"21","hashOfConfig":"14"},{"size":851,"mtime":1683616631967,"results":"22","hashOfConfig":"14"},{"size":1987,"mtime":1684788692130,"results":"23","hashOfConfig":"14"},{"size":5305,"mtime":1684057970762,"results":"24","hashOfConfig":"14"},{"size":1959,"mtime":1684789505721,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1yz1xkf",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\index.js",[],[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\App.js",["67"],[],"import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { UserContext } from \"./userContext\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport PhoneData from './components/PhoneData';\nimport AddPhoneData from './components/AddPhoneData';\n\nfunction App() {\n  /**\n   * Podatek o tem, ali je uporabnik prijavljen ali ne, bomo potrebovali v vseh komponentah.\n   * State je dosegljiv samo znotraj trenutne komponente. Če želimo deliti spremenljivke z\n   * ostalimi komponentami, moramo uporabiti Context.\n   * Vsebino Contexta smo definirali v datoteki userContext.js. Poleg objekta 'user', potrebujemo\n   * še funkcijo, ki bo omogočala posodabljanje te vrednosti. To funkcijo definiramo v komponenti App\n   * (updateUserData). V render metodi pripravimo UserContext.Provider, naš Context je potem dosegljiv\n   * v vseh komponentah, ki se nahajajo znotraj tega providerja.\n   * V komponenti Login ob uspešni prijavi nastavimo userContext na objekt s trenutno prijavljenim uporabnikom.\n   * Ostale komponente (npr. Header) lahko uporabijo UserContext.Consumer, da dostopajo do prijavljenega\n   * uporabnika.\n   * Context se osveži, vsakič ko osvežimo aplikacijo v brskalniku. Da preprečimo neželeno odjavo uporabnika,\n   * lahko context trajno hranimo v localStorage v brskalniku.\n   */\n  const [user, setUser] = useState(localStorage.user ? JSON.parse(localStorage.user) : null);\n  const updateUserData = (userInfo) => {\n    localStorage.setItem(\"user\", JSON.stringify(userInfo));\n    setUser(userInfo);\n  }\n\n  /**\n   * Na vrhu vključimo komponento Header, z naslovom in menijem.\n   * Nato vključimo Router, ki prikaže ustrezno komponento v odvisnosti od URL naslova.\n   * Pomembno je, da za navigacijo in preusmeritve uporabljamo komponenti Link in Navigate, ki sta\n   * definirani v react-router-dom modulu. Na ta način izvedemo navigacijo brez osveževanja\n   * strani. Klasične metode (<a href=\"\"> in window.location) bi pomenile osvežitev aplikacije\n   * in s tem dodatno obremenitev (ponovni izris komponente Header, ponastavitev Contextov,...)\n   */\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{\n        user: user,\n        setUserContext: updateUserData\n      }}>\n        <div className=\"App\">\n          <Header title=\"My application\"></Header>\n          <Routes>\n            <Route path=\"/\" exact element={<PhoneData />}></Route>\n            <Route path=\"/addPhoneData\" exact element={<AddPhoneData />}></Route>\n            <Route path=\"/login\" exact element={<Login />}></Route>\n            <Route path=\"/register\" element={<Register />}></Route>\n            <Route path=\"/profile\" element={<Profile />}></Route>\n            <Route path=\"/logout\" element={<Logout />}></Route>\n          </Routes>\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\userContext.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Login.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Header.js",["68"],[],"import { useContext } from \"react\";\r\nimport { UserContext } from \"../userContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header>\r\n            <h1>{props.title}</h1>\r\n            <nav>\r\n                <ul>\r\n                    <li><Link to='/'>PhoneData</Link></li>\r\n                    <UserContext.Consumer>\r\n                        {context => (\r\n                            context.user ?\r\n                                <>\r\n                                    <li><Link to='/addPhoneData'>AddPhoneData</Link></li>\r\n                                    <li><Link to='/profile'>Profile</Link></li>\r\n                                    <li><Link to='/logout'>Logout</Link></li>\r\n                                </>\r\n                            :\r\n                                <>\r\n                                    <li><Link to='/login'>Login</Link></li>\r\n                                    <li><Link to='/register'>Register</Link></li>\r\n                                </>\r\n\r\n                        )}\r\n                    </UserContext.Consumer>\r\n                </ul>\r\n            </nav>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Register.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Logout.js",["69","70"],[],"import { useEffect, useContext } from 'react';\r\nimport { UserContext } from '../userContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction Logout(){\r\n    const userContext = useContext(UserContext); \r\n    useEffect(function(){\r\n        const logout = async function(){\r\n            userContext.setUserContext(null);\r\n            const res = await fetch(\"http://localhost:3001/users/logout\");\r\n        }\r\n        logout();\r\n    }, []);\r\n\r\n    return (\r\n        <Navigate replace to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Profile.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneData.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\AddPhoneData.js",["71","72"],[],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction AddPhoneData() {\r\n    const userContext = useContext(UserContext); \r\n    const[latitude, setLatitude] = useState('');\r\n    const[longitude, setLongitude] = useState('');\r\n    const[accelerometerX, setAccelerometerX] = useState('');\r\n    const[accelerometerY, setAccelerometerY] = useState('');\r\n    const[accelerometerZ, setAccelerometerZ] = useState('');\r\n    const[userAccelerometerX, setUserAccelerometerX] = useState('');\r\n    const[userAccelerometerY, setUserAccelerometerY] = useState('');\r\n    const[userAccelerometerZ, setUserAccelerometerZ] = useState('');\r\n    const[gyroscopeX, setGyroscopeX] = useState('');\r\n    const[gyroscopeY, setGyroscopeY] = useState('');\r\n    const[gyroscopeZ, setGyroscopeZ] = useState('');\r\n    const[lightIntensity, setLightIntensity] = useState('');\r\n    const[uploaded, setUploaded] = useState(false);\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        const res = await fetch('http://localhost:3001/phoneData', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ latitude, longitude, accelerometerX, accelerometerY, accelerometerZ, userAccelerometerX, userAccelerometerY, userAccelerometerZ, \r\n                gyroscopeX, gyroscopeY, gyroscopeZ, lightIntensity })\r\n          });\r\n          const data = await res.json();\r\n      \r\n          setUploaded(true);\r\n      }\r\n\r\n    //   'latitude' : Number,\r\n\t// 'longitude' : Number,\r\n\t// 'captureDate' : Date,\r\n\t// 'accelerometerX' : Number,\r\n\t// 'accelerometerY' : Number,\r\n\t// 'accelerometerZ' : Number,\r\n\t// 'userAccelerometerX' : Number,\r\n\t// 'userAccelerometerY' : Number,\r\n\t// 'userAccelerometerZ' : Number,\r\n\t// 'gyroscopeX' : Number,\r\n\t// 'gyroscopeY' : Number,\r\n\t// 'gyroscopeZ' : Number,\r\n\t// 'lightIntensity' : Number\r\n\r\n    return (\r\n         <form className=\"form-group\" onSubmit={onSubmit}>\r\n            {!userContext.user ? <Navigate replace to=\"/login\" /> : \"\"}\r\n            {uploaded ? <Navigate replace to=\"/\" /> : \"\"}\r\n            <label> Latitude:\r\n            <input type=\"number\" name=\"latitude\" className=\"form-control\" value={latitude} onChange={(e) => setLatitude(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> Longitude:\r\n            <input type=\"number\" name=\"longitude\" className=\"form-control\" value={longitude} onChange={(e) => setLongitude(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> accelerometerX:\r\n            <input type=\"number\" name=\"accelerometerX\" className=\"form-control\" value={accelerometerX} onChange={(e) => setAccelerometerX(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> accelerometerY:\r\n            <input type=\"number\" name=\"accelerometerY\" className=\"form-control\" value={accelerometerY} onChange={(e) => setAccelerometerY(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> accelerometerZ:\r\n            <input type=\"number\" name=\"accelerometerZ\" className=\"form-control\" value={accelerometerZ} onChange={(e) => setAccelerometerZ(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> userAccelerometerX:\r\n            <input type=\"number\" name=\"userAccelerometerX\" className=\"form-control\" value={userAccelerometerX} onChange={(e) => setUserAccelerometerX(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> userAccelerometerY:\r\n            <input type=\"number\" name=\"userAccelerometerY\" className=\"form-control\" value={userAccelerometerY} onChange={(e) => setUserAccelerometerY(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> userAccelerometerZ:\r\n            <input type=\"number\" name=\"userAccelerometerZ\" className=\"form-control\" value={userAccelerometerZ} onChange={(e) => setUserAccelerometerZ(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> gyroscopeX:\r\n            <input type=\"number\" name=\"gyroscopeX\" className=\"form-control\" value={gyroscopeX} onChange={(e) => setGyroscopeX(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> gyroscopeY:\r\n            <input type=\"number\" name=\"gyroscopeY\" className=\"form-control\" value={gyroscopeY} onChange={(e) => setGyroscopeY(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> gyroscopeZ:\r\n            <input type=\"number\" name=\"gyroscopeZ\" className=\"form-control\" value={gyroscopeZ} onChange={(e) => setGyroscopeZ(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> lightIntensity:\r\n            <input type=\"number\" name=\"lightIntensity\" className=\"form-control\" value={lightIntensity} onChange={(e) => setLightIntensity(e.target.value)} required/>\r\n            </label>\r\n            <br /><br />\r\n            <input className=\"btn btn-primary\" type=\"submit\" name=\"submit\" value=\"Add Phone Data\" />\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddPhoneData;","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneMap.js",["73"],[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":20,"nodeType":"76","messageId":"77","endLine":1,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":20},{"ruleId":"74","severity":1,"message":"79","line":10,"column":19,"nodeType":"76","messageId":"77","endLine":10,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":13,"column":8,"nodeType":"82","endLine":13,"endColumn":10,"suggestions":"83"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":39,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"84","line":30,"column":17,"nodeType":"76","messageId":"77","endLine":30,"endColumn":21},{"ruleId":"74","severity":1,"message":"85","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'data' is assigned a value but never used.","'useState' is defined but never used.",{"desc":"87","fix":"88"},"Update the dependencies array to be: [userContext]",{"range":"89","text":"90"},[443,445],"[userContext]"]