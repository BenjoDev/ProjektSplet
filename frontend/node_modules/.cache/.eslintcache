[{"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\index.js":"1","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\reportWebVitals.js":"2","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\App.js":"3","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\userContext.js":"4","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Login.js":"5","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Header.js":"6","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Register.js":"7","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Logout.js":"8","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Profile.js":"9","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneData.js":"10","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\AddPhoneData.js":"11","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneMap.js":"12","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\RoadMap.js":"13"},{"size":535,"mtime":1683616631582,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1683616631621,"results":"16","hashOfConfig":"15"},{"size":3068,"mtime":1684749785264,"results":"17","hashOfConfig":"15"},{"size":140,"mtime":1683616631658,"results":"18","hashOfConfig":"15"},{"size":1607,"mtime":1683616631796,"results":"19","hashOfConfig":"15"},{"size":1211,"mtime":1683643161381,"results":"20","hashOfConfig":"15"},{"size":1580,"mtime":1683616632010,"results":"21","hashOfConfig":"15"},{"size":537,"mtime":1683616631837,"results":"22","hashOfConfig":"15"},{"size":851,"mtime":1683616631967,"results":"23","hashOfConfig":"15"},{"size":2880,"mtime":1684750938182,"results":"24","hashOfConfig":"15"},{"size":5305,"mtime":1684057970762,"results":"25","hashOfConfig":"15"},{"size":5001,"mtime":1684751302343,"results":"26","hashOfConfig":"15"},{"size":1235,"mtime":1684749867560,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1yz1xkf",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"31"},"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\index.js",[],[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\App.js",["75"],[],"import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { UserContext } from \"./userContext\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport PhoneData from './components/PhoneData';\nimport AddPhoneData from './components/AddPhoneData';\n\nfunction App() {\n  /**\n   * Podatek o tem, ali je uporabnik prijavljen ali ne, bomo potrebovali v vseh komponentah.\n   * State je dosegljiv samo znotraj trenutne komponente. Če želimo deliti spremenljivke z\n   * ostalimi komponentami, moramo uporabiti Context.\n   * Vsebino Contexta smo definirali v datoteki userContext.js. Poleg objekta 'user', potrebujemo\n   * še funkcijo, ki bo omogočala posodabljanje te vrednosti. To funkcijo definiramo v komponenti App\n   * (updateUserData). V render metodi pripravimo UserContext.Provider, naš Context je potem dosegljiv\n   * v vseh komponentah, ki se nahajajo znotraj tega providerja.\n   * V komponenti Login ob uspešni prijavi nastavimo userContext na objekt s trenutno prijavljenim uporabnikom.\n   * Ostale komponente (npr. Header) lahko uporabijo UserContext.Consumer, da dostopajo do prijavljenega\n   * uporabnika.\n   * Context se osveži, vsakič ko osvežimo aplikacijo v brskalniku. Da preprečimo neželeno odjavo uporabnika,\n   * lahko context trajno hranimo v localStorage v brskalniku.\n   */\n  const [user, setUser] = useState(localStorage.user ? JSON.parse(localStorage.user) : null);\n  const updateUserData = (userInfo) => {\n    localStorage.setItem(\"user\", JSON.stringify(userInfo));\n    setUser(userInfo);\n  }\n\n  /**\n   * Na vrhu vključimo komponento Header, z naslovom in menijem.\n   * Nato vključimo Router, ki prikaže ustrezno komponento v odvisnosti od URL naslova.\n   * Pomembno je, da za navigacijo in preusmeritve uporabljamo komponenti Link in Navigate, ki sta\n   * definirani v react-router-dom modulu. Na ta način izvedemo navigacijo brez osveževanja\n   * strani. Klasične metode (<a href=\"\"> in window.location) bi pomenile osvežitev aplikacije\n   * in s tem dodatno obremenitev (ponovni izris komponente Header, ponastavitev Contextov,...)\n   */\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{\n        user: user,\n        setUserContext: updateUserData\n      }}>\n        <div className=\"App\">\n          <Header title=\"My application\"></Header>\n          <Routes>\n            <Route path=\"/\" exact element={<PhoneData />}></Route>\n            <Route path=\"/addPhoneData\" exact element={<AddPhoneData />}></Route>\n            <Route path=\"/login\" exact element={<Login />}></Route>\n            <Route path=\"/register\" element={<Register />}></Route>\n            <Route path=\"/profile\" element={<Profile />}></Route>\n            <Route path=\"/logout\" element={<Logout />}></Route>\n          </Routes>\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\userContext.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Login.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Header.js",["76"],[],"import { useContext } from \"react\";\r\nimport { UserContext } from \"../userContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header>\r\n            <h1>{props.title}</h1>\r\n            <nav>\r\n                <ul>\r\n                    <li><Link to='/'>PhoneData</Link></li>\r\n                    <UserContext.Consumer>\r\n                        {context => (\r\n                            context.user ?\r\n                                <>\r\n                                    <li><Link to='/addPhoneData'>AddPhoneData</Link></li>\r\n                                    <li><Link to='/profile'>Profile</Link></li>\r\n                                    <li><Link to='/logout'>Logout</Link></li>\r\n                                </>\r\n                            :\r\n                                <>\r\n                                    <li><Link to='/login'>Login</Link></li>\r\n                                    <li><Link to='/register'>Register</Link></li>\r\n                                </>\r\n\r\n                        )}\r\n                    </UserContext.Consumer>\r\n                </ul>\r\n            </nav>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Register.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Logout.js",["77","78"],[],"import { useEffect, useContext } from 'react';\r\nimport { UserContext } from '../userContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction Logout(){\r\n    const userContext = useContext(UserContext); \r\n    useEffect(function(){\r\n        const logout = async function(){\r\n            userContext.setUserContext(null);\r\n            const res = await fetch(\"http://localhost:3001/users/logout\");\r\n        }\r\n        logout();\r\n    }, []);\r\n\r\n    return (\r\n        <Navigate replace to=\"/\" />\r\n    );\r\n}\r\n\r\nexport default Logout;","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\Profile.js",[],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneData.js",["79","80"],[],"import { useState, useEffect } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport RoadMap from './RoadMap';\r\nimport PhoneMap from './PhoneMap';\r\n\r\n// function PhoneMap({ phoneData }) {\r\n//     useEffect(() => {\r\n//       const map = L.map('map').setView([0, 0], 2);\r\n  \r\n//       L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n//         attribution: 'Map data &copy; OpenStreetMap contributors'\r\n//       }).addTo(map);\r\n  \r\n//       phoneData.forEach(item => {\r\n//         const marker = L.marker([item.latitude, item.longitude]).addTo(map);\r\n//         marker.bindPopup(`User: ${item.capturedBy}, Capture date: ${item.captureDate}`);\r\n//       });\r\n  \r\n//       return () => {\r\n//         map.remove();\r\n//       };\r\n//     }, [phoneData]);\r\n  \r\n//     return <div id=\"map\" style={{ height: '400px' }}></div>;\r\n//   }\r\n\r\nfunction PhoneData() {\r\n    const [phoneData, setPhoneData] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const getPhoneData = async function() {\r\n        const res = await fetch(\"http://localhost:3001/phoneData\");\r\n        const data = await res.json();\r\n        setPhoneData(data);\r\n      };\r\n      getPhoneData();\r\n    }, []);\r\n\r\n    const startLocation = {\r\n      latitude: 37.7749,\r\n      longitude: -122.4194\r\n    };\r\n    \r\n    const endLocation = {\r\n      latitude: 34.0522,\r\n      longitude: -118.2437\r\n    };\r\n\r\n    const middleLocations = {\r\n      latitude: 37.567, \r\n      longitude: -120.012\r\n    };\r\n    // const middleLocations = [\r\n    //   { latitude: 12.345, longitude: 67.890 },\r\n    //   { latitude: 23.456, longitude: 78.901 },\r\n    //   { latitude: 34.567, longitude: 89.012 }\r\n    // ];\r\n    return (\r\n      <div>\r\n        <h3>Phone data:</h3>\r\n        <ul>\r\n          {phoneData.map((item) => (\r\n            <li key={item._id}>\r\n              User: {item.capturedBy}, Latitude: {item.latitude}, Longitude: {item.longitude}, Capture date: {item.captureDate}, \r\n              accelerometerX: {item.accelerometerX}, accelerometerY: {item.accelerometerY}, accelerometerZ: {item.accelerometerZ}, \r\n              userAccelerometerX: {item.userAccelerometerX}, userAccelerometerY: {item.userAccelerometerY}, userAccelerometerZ: {item.userAccelerometerZ}, \r\n              gyroscopeX: {item.gyroscopeX}, gyroscopeY: {item.gyroscopeY}, gyroscopeZ: {item.gyroscopeZ}, lightIntensity: {item.lightIntensity}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* <PhoneMap phoneData={phoneData} /> */}\r\n        {/* <PhoneMap phoneData={phoneData} startLocation={startLocation} endLocation={endLocation} /> */}\r\n        <PhoneMap\r\n          phoneData={phoneData}\r\n          startLocation={startLocation}\r\n          middleLocation={middleLocations}\r\n          endLocation={endLocation}\r\n        />\r\n        {/* <RoadMap /> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default PhoneData;",[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\AddPhoneData.js",["81","82"],[],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction AddPhoneData() {\r\n    const userContext = useContext(UserContext); \r\n    const[latitude, setLatitude] = useState('');\r\n    const[longitude, setLongitude] = useState('');\r\n    const[accelerometerX, setAccelerometerX] = useState('');\r\n    const[accelerometerY, setAccelerometerY] = useState('');\r\n    const[accelerometerZ, setAccelerometerZ] = useState('');\r\n    const[userAccelerometerX, setUserAccelerometerX] = useState('');\r\n    const[userAccelerometerY, setUserAccelerometerY] = useState('');\r\n    const[userAccelerometerZ, setUserAccelerometerZ] = useState('');\r\n    const[gyroscopeX, setGyroscopeX] = useState('');\r\n    const[gyroscopeY, setGyroscopeY] = useState('');\r\n    const[gyroscopeZ, setGyroscopeZ] = useState('');\r\n    const[lightIntensity, setLightIntensity] = useState('');\r\n    const[uploaded, setUploaded] = useState(false);\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        const res = await fetch('http://localhost:3001/phoneData', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ latitude, longitude, accelerometerX, accelerometerY, accelerometerZ, userAccelerometerX, userAccelerometerY, userAccelerometerZ, \r\n                gyroscopeX, gyroscopeY, gyroscopeZ, lightIntensity })\r\n          });\r\n          const data = await res.json();\r\n      \r\n          setUploaded(true);\r\n      }\r\n\r\n    //   'latitude' : Number,\r\n\t// 'longitude' : Number,\r\n\t// 'captureDate' : Date,\r\n\t// 'accelerometerX' : Number,\r\n\t// 'accelerometerY' : Number,\r\n\t// 'accelerometerZ' : Number,\r\n\t// 'userAccelerometerX' : Number,\r\n\t// 'userAccelerometerY' : Number,\r\n\t// 'userAccelerometerZ' : Number,\r\n\t// 'gyroscopeX' : Number,\r\n\t// 'gyroscopeY' : Number,\r\n\t// 'gyroscopeZ' : Number,\r\n\t// 'lightIntensity' : Number\r\n\r\n    return (\r\n         <form className=\"form-group\" onSubmit={onSubmit}>\r\n            {!userContext.user ? <Navigate replace to=\"/login\" /> : \"\"}\r\n            {uploaded ? <Navigate replace to=\"/\" /> : \"\"}\r\n            <label> Latitude:\r\n            <input type=\"number\" name=\"latitude\" className=\"form-control\" value={latitude} onChange={(e) => setLatitude(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> Longitude:\r\n            <input type=\"number\" name=\"longitude\" className=\"form-control\" value={longitude} onChange={(e) => setLongitude(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> accelerometerX:\r\n            <input type=\"number\" name=\"accelerometerX\" className=\"form-control\" value={accelerometerX} onChange={(e) => setAccelerometerX(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> accelerometerY:\r\n            <input type=\"number\" name=\"accelerometerY\" className=\"form-control\" value={accelerometerY} onChange={(e) => setAccelerometerY(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> accelerometerZ:\r\n            <input type=\"number\" name=\"accelerometerZ\" className=\"form-control\" value={accelerometerZ} onChange={(e) => setAccelerometerZ(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> userAccelerometerX:\r\n            <input type=\"number\" name=\"userAccelerometerX\" className=\"form-control\" value={userAccelerometerX} onChange={(e) => setUserAccelerometerX(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> userAccelerometerY:\r\n            <input type=\"number\" name=\"userAccelerometerY\" className=\"form-control\" value={userAccelerometerY} onChange={(e) => setUserAccelerometerY(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> userAccelerometerZ:\r\n            <input type=\"number\" name=\"userAccelerometerZ\" className=\"form-control\" value={userAccelerometerZ} onChange={(e) => setUserAccelerometerZ(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> gyroscopeX:\r\n            <input type=\"number\" name=\"gyroscopeX\" className=\"form-control\" value={gyroscopeX} onChange={(e) => setGyroscopeX(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> gyroscopeY:\r\n            <input type=\"number\" name=\"gyroscopeY\" className=\"form-control\" value={gyroscopeY} onChange={(e) => setGyroscopeY(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> gyroscopeZ:\r\n            <input type=\"number\" name=\"gyroscopeZ\" className=\"form-control\" value={gyroscopeZ} onChange={(e) => setGyroscopeZ(e.target.value)} required/>\r\n            </label>\r\n            <br />\r\n            <label> lightIntensity:\r\n            <input type=\"number\" name=\"lightIntensity\" className=\"form-control\" value={lightIntensity} onChange={(e) => setLightIntensity(e.target.value)} required/>\r\n            </label>\r\n            <br /><br />\r\n            <input className=\"btn btn-primary\" type=\"submit\" name=\"submit\" value=\"Add Phone Data\" />\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddPhoneData;","C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\PhoneMap.js",["83"],[],"C:\\Faks\\Semester4\\RAIN\\projekt\\frontend\\src\\components\\RoadMap.js",["84","85","86"],[],"import React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport 'leaflet-routing-machine';\r\n\r\nconst RoadMap = () => {\r\n  useEffect(() => {\r\n    const startPoint = L.latLng(40.7128, -74.0060); // New York City\r\n    const endPoint = L.latLng(34.0522, -118.2437); // Los Angeles\r\n\r\n    // Create the map\r\n    const map = L.map('map').setView(startPoint, 5);\r\n\r\n    // Add the tile layer to the map\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: 'Map data &copy; OpenStreetMap contributors'\r\n    }).addTo(map);\r\n\r\n    // Add the start and end markers to the map\r\n    L.marker(startPoint).addTo(map);\r\n    L.marker(endPoint).addTo(map);\r\n\r\n    // Create a routing control and add it to the map\r\n    L.Routing.control({\r\n      waypoints: [\r\n        startPoint,\r\n        endPoint\r\n      ],\r\n      router: L.Routing.esri(),\r\n      routeWhileDragging: true\r\n    }).addTo(map);\r\n\r\n    // Cleanup the map when the component is unmounted\r\n    return () => map.remove();\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"map\" style={{ height: '400px' }}></div>\r\n  );\r\n};\r\n\r\nexport default RoadMap;\r\n",{"ruleId":"87","severity":1,"message":"88","line":1,"column":20,"nodeType":"89","messageId":"90","endLine":1,"endColumn":29},{"ruleId":"87","severity":1,"message":"91","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":20},{"ruleId":"87","severity":1,"message":"92","line":10,"column":19,"nodeType":"89","messageId":"90","endLine":10,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":13,"column":8,"nodeType":"95","endLine":13,"endColumn":10,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":9},{"ruleId":"87","severity":1,"message":"98","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":1,"column":39,"nodeType":"89","messageId":"90","endLine":1,"endColumn":48},{"ruleId":"87","severity":1,"message":"99","line":30,"column":17,"nodeType":"89","messageId":"90","endLine":30,"endColumn":21},{"ruleId":"87","severity":1,"message":"100","line":66,"column":10,"nodeType":"89","messageId":"90","endLine":66,"endColumn":18},{"ruleId":"87","severity":1,"message":"101","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"87","severity":1,"message":"102","line":2,"column":24,"nodeType":"89","messageId":"90","endLine":2,"endColumn":33},{"ruleId":"87","severity":1,"message":"103","line":2,"column":35,"nodeType":"89","messageId":"90","endLine":2,"endColumn":41},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'L' is defined but never used.","'RoadMap' is defined but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'MapContainer' is defined but never used.","'TileLayer' is defined but never used.","'Marker' is defined but never used.",{"desc":"105","fix":"106"},"Update the dependencies array to be: [userContext]",{"range":"107","text":"108"},[443,445],"[userContext]"]